# Usa imagem leve do Python 3.11
FROM python:3.11-slim

# Define diretório de trabalho
WORKDIR /app

# Instala dependências do sistema (necessárias para psycopg2, Kafka e builds)
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq-dev \
    gcc \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Instala Poetry
RUN pip install --no-cache-dir poetry

# Copia arquivos de dependência
COPY pyproject.toml poetry.lock ./

# Instala dependências com Poetry, sem virtualenvs
RUN poetry config virtualenvs.create false \
    && poetry install --no-interaction --no-ansi --no-root

# Instala psycopg2-binary (evita erros comuns com libpq)
RUN pip install --no-cache-dir psycopg2-binary

# Copia o restante do projeto (inclusive src e tests)
COPY . .

# Define PYTHONPATH para facilitar os imports
ENV PYTHONPATH=/app

# Comando padrão (pode ser sobrescrito pelo docker-compose)
CMD ["pytest"]
